name: Deploy Lambda API to Production

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (leave empty for latest)'
        required: false
        type: string

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
  API_GATEWAY_ID: ${{ vars.API_GATEWAY_ID }}
  API_GATEWAY_ROOT_RESOURCE_ID: ${{ vars.API_GATEWAY_ROOT_RESOURCE_ID }}

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Deploy to Production
      run: |
        # Get the version to deploy (use input if provided, otherwise latest)
        if [ -n "${{ github.event.inputs.version }}" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=$(aws lambda list-versions-by-function \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --query 'Versions[-1].Version' \
            --output text)
        fi
        
        # Update function configuration with environment
        aws lambda update-function-configuration \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --description "Manually deployed version: $VERSION" \
          --environment "Variables={API_ENV=production}"
        
        # Wait for configuration update to complete
        aws lambda wait function-updated --function-name ${{ env.LAMBDA_FUNCTION_NAME }}
        
        # Update production alias to point to new version
        aws lambda update-alias \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --name production \
          --function-version $VERSION
        
        # Get account ID
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        
        # Get the Lambda ARN with alias instead of version
        LAMBDA_ARN="arn:aws:lambda:${AWS_REGION}:${AWS_ACCOUNT_ID}:function:${{ env.LAMBDA_FUNCTION_NAME }}:production"
        
        # Update API Gateway integration to use alias
        aws apigateway update-integration \
          --rest-api-id ${{ env.API_GATEWAY_ID }} \
          --resource-id ${{ env.API_GATEWAY_ROOT_RESOURCE_ID }} \
          --http-method ANY \
          --patch-operations \
            op=replace,path=/uri,value="arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${LAMBDA_ARN}/invocations"
        
        # Create deployment to make changes live
        aws apigateway create-deployment \
          --rest-api-id ${{ env.API_GATEWAY_ID }} \
          --stage-name v1 \
          --description "Lambda version $VERSION"
        
        echo "âœ… Deployed version $VERSION to production" 